// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;

namespace Prueba.Models.Models
{
    public partial class P1700Context
    {
        private IP1700ContextProcedures _procedures;

        public virtual IP1700ContextProcedures Procedures
        {
            get
            {
                if (_procedures is null) _procedures = new P1700ContextProcedures(this);
                return _procedures;
            }
            set
            {
                _procedures = value;
            }
        }

        public IP1700ContextProcedures GetProcedures()
        {
            return Procedures;
        }

        protected void OnModelCreatingGeneratedProcedures(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ObtenerCantidadEmpleadosSupervisadosResult>().HasNoKey().ToView(null);
            modelBuilder.Entity<ObtenerEmpleadosResult>().HasNoKey().ToView(null);
        }
    }

    public partial class P1700ContextProcedures : IP1700ContextProcedures
    {
        private readonly P1700Context _context;

        public P1700ContextProcedures(P1700Context context)
        {
            _context = context;
        }

        public virtual async Task<List<ObtenerCantidadEmpleadosSupervisadosResult>> ObtenerCantidadEmpleadosSupervisadosAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                parameterreturnValue,
            };
            var _ = await _context.SqlQueryAsync<ObtenerCantidadEmpleadosSupervisadosResult>("EXEC @returnValue = [dbo].[ObtenerCantidadEmpleadosSupervisados]", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }

        public virtual async Task<List<ObtenerEmpleadosResult>> ObtenerEmpleadosAsync(int? EmpleadoID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                new SqlParameter
                {
                    ParameterName = "EmpleadoID",
                    Value = EmpleadoID ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Int,
                },
                parameterreturnValue,
            };
            var _ = await _context.SqlQueryAsync<ObtenerEmpleadosResult>("EXEC @returnValue = [dbo].[ObtenerEmpleados] @EmpleadoID = @EmpleadoID", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }
    }
}
